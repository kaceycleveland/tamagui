diff --git a/lib/module/index.native.js b/lib/module/index.native.js
index e8a59fd73ce106accf8c77e1cb78ebd4163d8f5d..b4fd96e9721eef8098a848ecaeb6d2e4323f055d 100644
--- a/lib/module/index.native.js
+++ b/lib/module/index.native.js
@@ -348,48 +348,38 @@ class Screen extends React.Component {
   }
 }
 _defineProperty(Screen, "contextType", ScreenContext);
-module.exports = {
+
   // these are classes so they are not evaluated until used
   // so no need to use getters for them
-  Screen,
-  ScreenContainer,
-  ScreenContext,
-  ScreenStack,
-  InnerScreen,
-  SearchBar,
-  FullWindowOverlay,
-  get NativeScreen() {
-    return ScreensNativeModules.NativeScreen;
-  },
-  get NativeScreenContainer() {
-    return ScreensNativeModules.NativeScreenContainer;
-  },
-  get NativeScreenNavigationContainer() {
-    return ScreensNativeModules.NativeScreenNavigationContainer;
-  },
-  get ScreenStackHeaderConfig() {
-    return ScreensNativeModules.NativeScreenStackHeaderConfig;
-  },
-  get ScreenStackHeaderSubview() {
-    return ScreensNativeModules.NativeScreenStackHeaderSubview;
-  },
-  get SearchBarCommands() {
-    return ScreensNativeModules.NativeSearchBarCommands;
-  },
+exports.Screen = Screen
+exports.ScreenContainer = ScreenContainer
+exports.ScreenContext = ScreenContext
+exports.ScreenStack = ScreenStack
+exports.InnerScreen = InnerScreen
+exports.SearchBar = SearchBar
+exports.FullWindowOverlay = FullWindowOverlay
+
+exports.NativeScreen = ScreensNativeModules.NativeScreen;
+exports.NativeScreenContainer = ScreensNativeModules.NativeScreenContainer;
+exports.NativeScreenNavigationContainer = ScreensNativeModules.NativeScreenNavigationContainer;
+exports.ScreenStackHeaderConfig = ScreensNativeModules.NativeScreenStackHeaderConfig;
+exports.ScreenStackHeaderSubview = ScreensNativeModules.NativeScreenStackHeaderSubview;
+exports.SearchBarCommands = ScreensNativeModules.NativeSearchBarCommands;
+
   // these are functions and will not be evaluated until used
   // so no need to use getters for them
-  ScreenStackHeaderBackButtonImage,
-  ScreenStackHeaderRightView,
-  ScreenStackHeaderLeftView,
-  ScreenStackHeaderCenterView,
-  ScreenStackHeaderSearchBarView,
-  enableScreens,
-  enableFreeze,
-  screensEnabled,
-  shouldUseActivityState,
-  useTransitionProgress,
-  isSearchBarAvailableForCurrentPlatform,
-  isNewBackTitleImplementation,
-  executeNativeBackPress
-};
+exports.ScreenStackHeaderBackButtonImage = ScreenStackHeaderBackButtonImage
+exports.ScreenStackHeaderRightView = ScreenStackHeaderRightView
+exports.ScreenStackHeaderLeftView = ScreenStackHeaderLeftView
+exports.ScreenStackHeaderCenterView = ScreenStackHeaderCenterView
+exports.ScreenStackHeaderSearchBarView = ScreenStackHeaderSearchBarView
+exports.enableScreens = enableScreens
+exports.enableFreeze = enableFreeze
+exports.screensEnabled = screensEnabled
+exports.shouldUseActivityState = shouldUseActivityState
+exports.useTransitionProgress = useTransitionProgress
+exports.isSearchBarAvailableForCurrentPlatform = isSearchBarAvailableForCurrentPlatform
+exports.isNewBackTitleImplementation = isNewBackTitleImplementation
+exports.executeNativeBackPress = executeNativeBackPress
+
 //# sourceMappingURL=index.native.js.map
